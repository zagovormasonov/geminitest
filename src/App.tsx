import { useState } from 'react';
import geminiService from './services/geminiService';
import './App.css';

interface AdviceState {
  advice: string | null;
  loading: boolean;
  error: string | null;
  modelUsed?: string;
}

function App() {
  const [state, setState] = useState<AdviceState>({
    advice: null,
    loading: false,
    error: null
  });

  const handleGetAdvice = async () => {
    setState(prev => ({ ...prev, loading: true, error: null }));
    
    try {
      const result = await geminiService.getPsychologicalAdvice();
      setState(prev => ({ 
        ...prev, 
        advice: result.advice, 
        modelUsed: result.modelUsed,
        loading: false 
      }));
    } catch (error) {
      setState(prev => ({ 
        ...prev, 
        error: error instanceof Error ? error.message : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
        loading: false 
      }));
    }
  };

  return (
    <div className="app">
      <div className="container">
        <header className="header">
          <h1>üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –°–æ–≤–µ—Ç</h1>
          <p>–ü–æ–ª—É—á–∏—Ç–µ –º—É–¥—Ä—ã–π —Å–æ–≤–µ—Ç –æ—Ç Gemini AI –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è</p>
        </header>

        <main className="main">
          <div className="advice-section">
            <button 
              className="advice-button"
              onClick={handleGetAdvice}
              disabled={state.loading}
            >
              {state.loading ? '–ü–æ–ª—É—á–∞—é —Å–æ–≤–µ—Ç...' : '–ü–æ–ª—É—á–∏—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç'}
            </button>

            {state.error && (
              <div className="error-message">
                <p>‚ùå {state.error}</p>
              </div>
            )}

            {state.advice && (
              <div className="advice-result">
                <h2>üí° –í–∞—à –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç:</h2>
                <div className="advice-text">
                  {state.advice}
                </div>
                {state.modelUsed && (
                  <div className="model-info">
                    <small>ü§ñ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –º–æ–¥–µ–ª—å—é: {state.modelUsed}</small>
                  </div>
                )}
              </div>
            )}
          </div>
        </main>

        <footer className="footer">
          <p>Powered by Google Gemini AI</p>
        </footer>
      </div>
    </div>
  );
}

export default App;